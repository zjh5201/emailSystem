<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.email.mapper.EmailMapper" >
  <resultMap id="BaseResultMap" type="com.email.po.Email" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="addressee_id" property="addresseeId" jdbcType="VARCHAR" />
    <result column="addresser_id" property="addresserId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="filepath" property="filepath" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="readed" property="readed" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="selecby_like">
		<if test="param1!=null and param1!='' "  >
			AND  addressee_id = #{param1}
		</if>
		<if test="param2!=null and param2!=''"  >
			AND title = #{param2}
		</if>
		<if test="param3!=null and param3!=-1 ">
			AND readed = #{param3}
		</if>
			AND addresser_id = #{param4}
	</sql>
  <select id="selectByOptions" parameterType="com.email.po.Email" resultType="com.email.po.Email">
  	select * from email where 1 = 1
  	<include refid="selecby_like"></include>
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, addressee_id, addresser_id, title, filepath, time, readed, content, filename
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.email.po.EmailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from email
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from email
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.email.po.EmailExample" >
    delete from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.email.po.Email" >
    insert into email (id, addressee_id, addresser_id, 
      title, filepath, time, 
      readed, content, filename
      )
    values (#{id,jdbcType=INTEGER}, #{addresseeId,jdbcType=VARCHAR}, #{addresserId,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{filepath,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{readed,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.email.po.Email" >
    insert into email
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="addresseeId != null" >
        addressee_id,
      </if>
      <if test="addresserId != null" >
        addresser_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="filepath != null" >
        filepath,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="readed != null" >
        readed,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="filename != null" >
        filename,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="addresseeId != null" >
        #{addresseeId,jdbcType=VARCHAR},
      </if>
      <if test="addresserId != null" >
        #{addresserId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null" >
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="readed != null" >
        #{readed,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.email.po.EmailExample" resultType="java.lang.Integer" >
    select count(*) from email
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update email
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addresseeId != null" >
        addressee_id = #{record.addresseeId,jdbcType=VARCHAR},
      </if>
      <if test="record.addresserId != null" >
        addresser_id = #{record.addresserId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.filepath != null" >
        filepath = #{record.filepath,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readed != null" >
        readed = #{record.readed,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null" >
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update email
    set id = #{record.id,jdbcType=INTEGER},
      addressee_id = #{record.addresseeId,jdbcType=VARCHAR},
      addresser_id = #{record.addresserId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      filepath = #{record.filepath,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      readed = #{record.readed,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.email.po.Email" >
    update email
    <set >
      <if test="addresseeId != null" >
        addressee_id = #{addresseeId,jdbcType=VARCHAR},
      </if>
      <if test="addresserId != null" >
        addresser_id = #{addresserId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null" >
        filepath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.email.po.Email" >
    update email
    set addressee_id = #{addresseeId,jdbcType=VARCHAR},
      addresser_id = #{addresserId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      filepath = #{filepath,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      readed = #{readed,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>